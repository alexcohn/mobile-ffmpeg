apply plugin: 'com.android.library'

def date = new Date().format("yyyyMMdd")
android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 240431
        versionName "4.3.1"
        project.archivesBaseName = "mobile-ffmpeg"
        consumerProguardFiles 'proguard-rules.pro'
        externalNativeBuild {
            ndkBuild {
                cFlags "-O3", "-DMOBILE_FFMPEG_BUILD_DATE=${date}", "-Wall", "-Wno-deprecated-declarations", "-Wno-pointer-sign", "-Wno-switch", "-Wno-unused-result", "-Wno-unused-variable"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        ndkBuild {
            path "src/main/cpp/Android.mk"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

task javadoc(type: Javadoc) {
    title = 'MobileFFmpeg'
    destinationDir = file("${projectDir}/../../docs/android/javadoc")
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    source = android.sourceSets.main.java.srcDirs
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("local.properties")))

repositories {
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/alexcohn/mobile-ffmpeg")
        credentials {
            username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
            password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
        }
    }
}

dependencies {
    implementation "com.android.ndk.thirdparty:ffmpeg:4.2.5"
    testImplementation "androidx.test.ext:junit:1.1.1"
}
